# 系统1
server {
    listen 80;
    listen [::]:80;
    server_name _;

    # 第一套系统 - 主路径
    location / {
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://fastapi_sso_frontend:8000;
        access_log /var/log/nginx/access_frontend.log;
        error_log /var/log/nginx/error_frontend.log;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /api {
        access_log /var/log/nginx/access_backend.log;
        error_log /var/log/nginx/error_backend.log;
        proxy_pass http://fastapi_sso_backend:8888;
    }
}

# 系统2
server {
    listen 81;
    listen [::]:81;
    server_name _;

    location / {
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://fastapi_sso_frontend2:8001;
        access_log /var/log/nginx/access_frontend2.log;
        error_log /var/log/nginx/error_frontend2.log;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /api2 {
        access_log /var/log/nginx/access_backend2.log;
        error_log /var/log/nginx/error_backend2.log;
        proxy_pass http://fastapi_sso_backend2:8889;
    }
}

# Keycloak 代理（如有需要）
server {
    listen 8081;
    listen [::]:8081;
    server_name _;
    location / {
        # 禁用gzip，保证sub_filter生效
        proxy_set_header Accept-Encoding "";

        # 替换响应内容中的容器名和端口为外部主机和端口
        sub_filter 'keycloak:8080' '$host:8081';
        # 对所有匹配项进行替换，而不是只替换第一个
        sub_filter_once off;

        # 设置代理请求头，传递主机名和端口信息
        proxy_set_header Host "keycloak:8080";
        proxy_set_header X-Forwarded-Host "keycloak:8080";
        proxy_set_header X-Forwarded-Port "8080";
        proxy_set_header X-Forwarded-Proto "http";

        # 将请求代理到Keycloak服务
        proxy_pass http://keycloak:8080;

        # 重写重定向URL，将内部地址替换为外部可访问地址
        # 将Keycloak服务内部URL重定向到外部可访问的URL
        # 当Keycloak返回重定向响应时(如登录后重定向)
        # 将响应头中的Location从 http://keycloak:8080 替换为 http://$host:8081
        # $host变量包含客户端请求中的Host头
        # 这样客户端就会被重定向到正确的外部地址
        proxy_redirect http://keycloak:8080 http://$host:8081;
        # proxy_redirect off;

        # 配置WebSocket支持
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # 配置访问日志和错误日志路径
        access_log /var/log/nginx/access_keycloak.log;
        error_log /var/log/nginx/error_keycloak.log;
    }
}
