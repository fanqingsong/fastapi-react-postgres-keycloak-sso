version: "3"

services:
  nginx:
    container_name: fastapi_sso_nginx
    image: swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/library/nginx:1.25.3
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./logs/nginx:/var/log/nginx
      - ./nginx/certs/cert.pem:/etc/nginx/cert.pem  # 替换为实际证书路径
      - ./nginx/certs/cert.key:/etc/nginx/key.pem    # 替换为实际私钥路径
    ports:
      - 80:80
      - 81:81
      - 8081:8081
    restart: unless-stopped
    depends_on:
      frontend:
        condition: service_healthy
      frontend2:
        condition: service_healthy
      backend:
        condition: service_healthy
      backend2:
        condition: service_healthy
      keycloak:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    container_name: fastapi_sso_backend
    build:
      context: backend
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      PYTHONPATH: .
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_USER}
    volumes:
      - ./logs/backend:/logs
    ports:
      - 8888:8888
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      # keycloak:
      #   condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/api"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  backend2:
    container_name: fastapi_sso_backend2
    build:
      context: backend2
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      PYTHONPATH: .
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_USER}
    volumes:
      - ./logs/backend2:/logs
    ports:
      - 8889:8889
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      # keycloak:
      #   condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8889/api2"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend:
    container_name: fastapi_sso_frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    environment:
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: "true"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend2:
    container_name: fastapi_sso_frontend2
    build:
      context: frontend2
      dockerfile: Dockerfile
    ports:
      - 8001:8001
    environment:
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: "true"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  keycloak:
    container_name: fastapi_sso_keycloak
    image: swr.cn-north-4.myhuaweicloud.com/ddn-k8s/quay.io/keycloak/keycloak:25.0
    command:
      - start-dev
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak_postgres:5432/${KEYCLOAK_DB_DATABASE}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - 9000:9000
      - 8080:8080
    restart: unless-stopped
    depends_on:
      keycloak_postgres:
        condition: service_healthy
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5
    #   start_period: 120s

  postgres:
    container_name: fastapi_sso_postgres
    image: swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/library/postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  keycloak_postgres:
    container_name: fastapi_sso_keycloak_postgres
    image: swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/library/postgres:latest
    restart: unless-stopped
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${KEYCLOAK_DB_DATABASE}
      POSTGRES_USER: ${KEYCLOAK_DB_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KEYCLOAK_DB_USER} -d ${KEYCLOAK_DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  postgres_data:
  keycloak_postgres_data:
